name: build gwlbtun

on:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build-gwlbtun:
    runs-on: ubuntu-latest
    # Build inside AL2023 so glibc matches the AMI
    container:
      image: public.ecr.aws/amazonlinux/amazonlinux:2023
    steps:
      - uses: actions/checkout@v4

      - name: Install build dependencies (AL2023)
        run: |
          dnf -y update
          dnf -y groupinstall "Development Tools"
          dnf -y install cmake gcc-c++ git openssl-devel boost-devel

      - name: Configure & build
        run: |
          cmake -DCMAKE_BUILD_TYPE=Release .
          make -j"$(nproc)"
          strip gwlbtun || true
          file gwlbtun
          ldd gwlbtun

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: gwlbtun-al2023
          path: gwlbtun

      - name: Set tag
        id: tag
        run: echo "TAG=ci-$(date +%Y%m%d%H%M%S)-${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.TAG }}
          release_name: GWLB Tunnel Handler build ${{ steps.tag.outputs.TAG }}
          body: Automated build from main @ ${{ steps.tag.outputs.TAG }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload binary to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./gwlbtun
          asset_name: gwlbtun
          asset_content_type: application/octet-stream
